{
  "version": "3.4",
  "log": [
    {
      "@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol:BytesLib": {
        "src": "@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol:11",
        "version": {
          "withMetadata": "ebde5556dd107bab3f4279c921bef5f7c7be05260bea6f9a0d1691331f396768",
          "withoutMetadata": "ebde5556dd107bab3f4279c921bef5f7c7be05260bea6f9a0d1691331f396768",
          "linkedWithoutMetadata": "ebde5556dd107bab3f4279c921bef5f7c7be05260bea6f9a0d1691331f396768"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol:ExcessivelySafeCall": {
        "src": "@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol:4",
        "version": {
          "withMetadata": "2591fcc4ecbccf7e04ae8f849e7d95d4a59ceb2bd41cff91575cacd97326c8ae",
          "withoutMetadata": "2591fcc4ecbccf7e04ae8f849e7d95d4a59ceb2bd41cff91575cacd97326c8ae",
          "linkedWithoutMetadata": "2591fcc4ecbccf7e04ae8f849e7d95d4a59ceb2bd41cff91575cacd97326c8ae"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp": {
        "src": "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:14",
        "inherit": [
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol:ILayerZeroReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "lzReceive(uint16,bytes,uint64,bytes)",
          "getConfig(uint16,uint16,address,uint256)",
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)",
          "setTrustedRemote(uint16,bytes)",
          "setTrustedRemoteAddress(uint16,bytes)",
          "getTrustedRemoteAddress(uint16)",
          "setPrecrime(address)",
          "setMinDstGas(uint16,uint16,uint256)",
          "setPayloadSizeLimit(uint16,uint256)",
          "isTrustedRemote(uint16,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LzApp",
            "src": "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:31"
          },
          {
            "kind": "state-variable-immutable",
            "name": "lzEndpoint",
            "src": "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "LzApp",
              "label": "trustedRemoteLookup",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "src": "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:21"
            },
            {
              "contract": "LzApp",
              "label": "minDstGasLookup",
              "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
              "src": "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:22"
            },
            {
              "contract": "LzApp",
              "label": "payloadSizeLimitLookup",
              "type": "t_mapping(t_uint16,t_uint256)",
              "src": "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:23"
            },
            {
              "contract": "LzApp",
              "label": "precrime",
              "type": "t_address",
              "src": "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:24"
            }
          ],
          "types": {
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)"
            },
            "t_uint16": {
              "label": "uint16"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
              "label": "mapping(uint16 => mapping(uint16 => uint256))"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp": {
        "src": "@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:13",
        "inherit": [
          "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol:ILayerZeroReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "nonblockingLzReceive(uint16,bytes,uint64,bytes)",
          "retryMessage(uint16,bytes,uint64,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NonblockingLzApp",
            "src": "@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "NonblockingLzApp",
              "label": "failedMessages",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
              "src": "@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:18"
            }
          ],
          "types": {
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
              "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"
            },
            "t_uint16": {
              "label": "uint16"
            },
            "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
              "label": "mapping(bytes => mapping(uint64 => bytes32))"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_uint64,t_bytes32)": {
              "label": "mapping(uint64 => bytes32)"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol:ILayerZeroEndpoint": {
        "src": "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol:7",
        "inherit": [
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig"
        ],
        "libraries": [],
        "methods": [
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "getChainId()",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getConfig(uint16,uint16,address,uint256)",
          "getSendVersion(address)",
          "getReceiveVersion(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol:ILayerZeroReceiver": {
        "src": "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lzReceive(uint16,bytes,uint64,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig": {
        "src": "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol:LzLib": {
        "src": "@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol:6",
        "version": {
          "withMetadata": "aeac3f5eb38d3af31338462c95e3904d15897d837620c1b63fcf1d19355d0cb3",
          "withoutMetadata": "aeac3f5eb38d3af31338462c95e3904d15897d837620c1b63fcf1d19355d0cb3",
          "linkedWithoutMetadata": "aeac3f5eb38d3af31338462c95e3904d15897d837620c1b63fcf1d19355d0cb3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin/contracts/interfaces/IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "bcac41ce4f0b4bbb00747a308f7ef4524b5003ce422c5a4341175be28f1f2765",
          "withoutMetadata": "bcac41ce4f0b4bbb00747a308f7ef4524b5003ce422c5a4341175be28f1f2765",
          "linkedWithoutMetadata": "bcac41ce4f0b4bbb00747a308f7ef4524b5003ce422c5a4341175be28f1f2765"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721URIStorage",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:16"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "87f7b97ae2706cf5cba5b05f50e2f641a8b0f9299e4fa41b0f2d3ab62ad52dba",
          "withoutMetadata": "87f7b97ae2706cf5cba5b05f50e2f641a8b0f9299e4fa41b0f2d3ab62ad52dba",
          "linkedWithoutMetadata": "87f7b97ae2706cf5cba5b05f50e2f641a8b0f9299e4fa41b0f2d3ab62ad52dba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "0a3af26993ac940d01459259521f15c426fc780b6c9e2cede4d1ae48a55945a1",
          "withoutMetadata": "0a3af26993ac940d01459259521f15c426fc780b6c9e2cede4d1ae48a55945a1",
          "linkedWithoutMetadata": "0a3af26993ac940d01459259521f15c426fc780b6c9e2cede4d1ae48a55945a1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:15",
        "version": {
          "withMetadata": "7d8c86be200cd941a7b5446c24cb2a1aed8d810b5c0a2f2c3c65e0b2eab2b7f6",
          "withoutMetadata": "7d8c86be200cd941a7b5446c24cb2a1aed8d810b5c0a2f2c3c65e0b2eab2b7f6",
          "linkedWithoutMetadata": "7d8c86be200cd941a7b5446c24cb2a1aed8d810b5c0a2f2c3c65e0b2eab2b7f6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8660b8017b9cf9a7e6344f78a2966580184a9da856c4ca4745170e4d8c17ac11",
          "withoutMetadata": "8660b8017b9cf9a7e6344f78a2966580184a9da856c4ca4745170e4d8c17ac11",
          "linkedWithoutMetadata": "8660b8017b9cf9a7e6344f78a2966580184a9da856c4ca4745170e4d8c17ac11"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "d331f76c1405048a05dcaa1d472938c5a1b7c76018b92d12517f154bc405ad92",
          "withoutMetadata": "d331f76c1405048a05dcaa1d472938c5a1b7c76018b92d12517f154bc405ad92",
          "linkedWithoutMetadata": "d331f76c1405048a05dcaa1d472938c5a1b7c76018b92d12517f154bc405ad92"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ONFT721.sol:ONFT721": {
        "src": "contracts/ONFT721.sol:9",
        "version": {
          "withMetadata": "fde9ec9648e33270f57492d7e6125f4ad56c8c2dde49f0df24f3f09e03b2788a",
          "withoutMetadata": "fde9ec9648e33270f57492d7e6125f4ad56c8c2dde49f0df24f3f09e03b2788a",
          "linkedWithoutMetadata": "fde9ec9648e33270f57492d7e6125f4ad56c8c2dde49f0df24f3f09e03b2788a"
        },
        "inherit": [
          "contracts/interfaces/IONFT721.sol:IONFT721",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "contracts/ONFT721Core.sol:ONFT721Core",
          "contracts/interfaces/IONFT721Core.sol:IONFT721Core",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp",
          "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol:ILayerZeroReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ONFT721",
            "src": "contracts/ONFT721.sol:10"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ONFT721Core.sol:ONFT721Core": {
        "src": "contracts/ONFT721Core.sol:11",
        "inherit": [
          "contracts/interfaces/IONFT721Core.sol:IONFT721Core",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp",
          "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol:ILayerZeroReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "estimateSendFee(uint16,bytes,address,uint256,bool,bytes)",
          "estimateSendBatchFee(uint16,bytes,address,uint256[],bool,bytes)",
          "sendFrom(address,uint16,bytes,address,uint256,address payable,address,bytes)",
          "sendBatchFrom(address,uint16,bytes,address,uint256[],address payable,address,bytes)",
          "clearCredits(bytes)",
          "setMinGasToTransferAndStore(uint256)",
          "setDstChainIdToTransferGas(uint16,uint256)",
          "setDstChainIdToBatchLimit(uint16,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ONFT721Core",
            "src": "contracts/ONFT721Core.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ONFT721Core",
              "label": "minGasToTransferAndStore",
              "type": "t_uint256",
              "src": "contracts/ONFT721Core.sol:21"
            },
            {
              "contract": "ONFT721Core",
              "label": "dstChainIdToBatchLimit",
              "type": "t_mapping(t_uint16,t_uint256)",
              "src": "contracts/ONFT721Core.sol:22"
            },
            {
              "contract": "ONFT721Core",
              "label": "dstChainIdToTransferGas",
              "type": "t_mapping(t_uint16,t_uint256)",
              "src": "contracts/ONFT721Core.sol:23"
            },
            {
              "contract": "ONFT721Core",
              "label": "storedCredits",
              "type": "t_mapping(t_bytes32,t_struct(StoredCredit)5135_storage)",
              "src": "contracts/ONFT721Core.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint16,t_uint256)": {
              "label": "mapping(uint16 => uint256)"
            },
            "t_uint16": {
              "label": "uint16"
            },
            "t_mapping(t_bytes32,t_struct(StoredCredit)5135_storage)": {
              "label": "mapping(bytes32 => struct ONFT721Core.StoredCredit)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(StoredCredit)5135_storage": {
              "label": "struct ONFT721Core.StoredCredit",
              "members": [
                {
                  "label": "srcChainId",
                  "type": "t_uint16"
                },
                {
                  "label": "toAddress",
                  "type": "t_address"
                },
                {
                  "label": "index",
                  "type": "t_uint256"
                },
                {
                  "label": "creditsRemain",
                  "type": "t_bool"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ProxyONFT721.sol:ProxyONFT721": {
        "src": "contracts/ProxyONFT721.sol:9",
        "version": {
          "withMetadata": "034a9ab49901853b43e85091b0d1dbe63122780506085ae0099e02d7d812c0c2",
          "withoutMetadata": "034a9ab49901853b43e85091b0d1dbe63122780506085ae0099e02d7d812c0c2",
          "linkedWithoutMetadata": "034a9ab49901853b43e85091b0d1dbe63122780506085ae0099e02d7d812c0c2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "contracts/ONFT721Core.sol:ONFT721Core",
          "contracts/interfaces/IONFT721Core.sol:IONFT721Core",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp",
          "@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol:ILayerZeroReceiver",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address,address)",
          "supportsInterface(bytes4)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyONFT721",
            "src": "contracts/ProxyONFT721.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/ProxyONFT721.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/interfaces/IONFT721.sol:IONFT721": {
        "src": "contracts/interfaces/IONFT721.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "contracts/interfaces/IONFT721Core.sol:IONFT721Core",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/interfaces/IONFT721Core.sol:IONFT721Core": {
        "src": "contracts/interfaces/IONFT721Core.sol:12",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "sendFrom(address,uint16,bytes,address,uint256,address payable,address,bytes)",
          "sendBatchFrom(address,uint16,bytes,address,uint256[],address payable,address,bytes)",
          "estimateSendFee(uint16,bytes,address,uint256,bool,bytes)",
          "estimateSendBatchFee(uint16,bytes,address,uint256[],bool,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/mocks/ERC721Mock.sol:ERC721Mock": {
        "src": "contracts/mocks/ERC721Mock.sol:6",
        "version": {
          "withMetadata": "a23f591d83eab84aaa63b9cb8f11b7a2079e3c1f2cd64e4cc96a6a1f2323ca19",
          "withoutMetadata": "a23f591d83eab84aaa63b9cb8f11b7a2079e3c1f2cd64e4cc96a6a1f2323ca19",
          "linkedWithoutMetadata": "a23f591d83eab84aaa63b9cb8f11b7a2079e3c1f2cd64e4cc96a6a1f2323ca19"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Mock",
            "src": "contracts/mocks/ERC721Mock.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Mock",
              "label": "s_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "contracts/mocks/ERC721Mock.sol:7"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/mocks/LZEndpointMock.sol:LZEndpointMock": {
        "src": "contracts/mocks/LZEndpointMock.sol:20",
        "version": {
          "withMetadata": "0b4d8bf2df94fe7739bcadc427eeb7aed8640be6db2a9db7bad58a83306743ce",
          "withoutMetadata": "0b4d8bf2df94fe7739bcadc427eeb7aed8640be6db2a9db7bad58a83306743ce",
          "linkedWithoutMetadata": "0b4d8bf2df94fe7739bcadc427eeb7aed8640be6db2a9db7bad58a83306743ce"
        },
        "inherit": [
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol:ILayerZeroEndpoint",
          "@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig"
        ],
        "libraries": [],
        "methods": [
          "(uint16)",
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "getChainId()",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getConfig(uint16,uint16,address,uint256)",
          "getSendVersion(address)",
          "getReceiveVersion(address)",
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)",
          "getLengthOfQueue(uint16,bytes)",
          "blockNextMsg()",
          "setDestLzEndpoint(address,address)",
          "setRelayerPrice(uint128,uint128,uint128,uint64,uint64)",
          "setProtocolFee(uint256,uint256)",
          "setOracleFee(uint256)",
          "setDefaultAdapterParams(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LZEndpointMock",
            "src": "contracts/mocks/LZEndpointMock.sol:103"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_send_entered_state",
            "src": "contracts/mocks/LZEndpointMock.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_receive_entered_state",
            "src": "contracts/mocks/LZEndpointMock.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "LZEndpointMock",
              "label": "lzEndpointLookup",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts/mocks/LZEndpointMock.sol:24"
            },
            {
              "contract": "LZEndpointMock",
              "label": "mockChainId",
              "type": "t_uint16",
              "src": "contracts/mocks/LZEndpointMock.sol:26"
            },
            {
              "contract": "LZEndpointMock",
              "label": "nextMsgBlocked",
              "type": "t_bool",
              "src": "contracts/mocks/LZEndpointMock.sol:27"
            },
            {
              "contract": "LZEndpointMock",
              "label": "relayerFeeConfig",
              "type": "t_struct(RelayerFeeConfig)6390_storage",
              "src": "contracts/mocks/LZEndpointMock.sol:30"
            },
            {
              "contract": "LZEndpointMock",
              "label": "protocolFeeConfig",
              "type": "t_struct(ProtocolFeeConfig)6379_storage",
              "src": "contracts/mocks/LZEndpointMock.sol:31"
            },
            {
              "contract": "LZEndpointMock",
              "label": "oracleFee",
              "type": "t_uint256",
              "src": "contracts/mocks/LZEndpointMock.sol:32"
            },
            {
              "contract": "LZEndpointMock",
              "label": "defaultAdapterParams",
              "type": "t_bytes_storage",
              "src": "contracts/mocks/LZEndpointMock.sol:33"
            },
            {
              "contract": "LZEndpointMock",
              "label": "inboundNonce",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))",
              "src": "contracts/mocks/LZEndpointMock.sol:37"
            },
            {
              "contract": "LZEndpointMock",
              "label": "outboundNonce",
              "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint64))",
              "src": "contracts/mocks/LZEndpointMock.sol:40"
            },
            {
              "contract": "LZEndpointMock",
              "label": "storedPayload",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)6397_storage))",
              "src": "contracts/mocks/LZEndpointMock.sol:44"
            },
            {
              "contract": "LZEndpointMock",
              "label": "msgsToDeliver",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)6404_storage)dyn_storage))",
              "src": "contracts/mocks/LZEndpointMock.sol:46"
            },
            {
              "contract": "LZEndpointMock",
              "label": "_send_entered_state",
              "type": "t_uint8",
              "src": "contracts/mocks/LZEndpointMock.sol:49"
            },
            {
              "contract": "LZEndpointMock",
              "label": "_receive_entered_state",
              "type": "t_uint8",
              "src": "contracts/mocks/LZEndpointMock.sol:50"
            }
          ],
          "types": {
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint16": {
              "label": "uint16"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_struct(RelayerFeeConfig)6390_storage": {
              "label": "struct LZEndpointMock.RelayerFeeConfig",
              "members": [
                {
                  "label": "dstPriceRatio",
                  "type": "t_uint128"
                },
                {
                  "label": "dstGasPriceInWei",
                  "type": "t_uint128"
                },
                {
                  "label": "dstNativeAmtCap",
                  "type": "t_uint128"
                },
                {
                  "label": "baseGas",
                  "type": "t_uint64"
                },
                {
                  "label": "gasPerByte",
                  "type": "t_uint64"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_struct(ProtocolFeeConfig)6379_storage": {
              "label": "struct LZEndpointMock.ProtocolFeeConfig",
              "members": [
                {
                  "label": "zroFee",
                  "type": "t_uint256"
                },
                {
                  "label": "nativeBP",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bytes_storage": {
              "label": "bytes"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))": {
              "label": "mapping(uint16 => mapping(bytes => uint64))"
            },
            "t_mapping(t_bytes_memory_ptr,t_uint64)": {
              "label": "mapping(bytes => uint64)"
            },
            "t_mapping(t_uint16,t_mapping(t_address,t_uint64))": {
              "label": "mapping(uint16 => mapping(address => uint64))"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)6397_storage))": {
              "label": "mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))"
            },
            "t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)6397_storage)": {
              "label": "mapping(bytes => struct LZEndpointMock.StoredPayload)"
            },
            "t_struct(StoredPayload)6397_storage": {
              "label": "struct LZEndpointMock.StoredPayload",
              "members": [
                {
                  "label": "payloadLength",
                  "type": "t_uint64"
                },
                {
                  "label": "dstAddress",
                  "type": "t_address"
                },
                {
                  "label": "payloadHash",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)6404_storage)dyn_storage))": {
              "label": "mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))"
            },
            "t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)6404_storage)dyn_storage)": {
              "label": "mapping(bytes => struct LZEndpointMock.QueuedPayload[])"
            },
            "t_array(t_struct(QueuedPayload)6404_storage)dyn_storage": {
              "label": "struct LZEndpointMock.QueuedPayload[]"
            },
            "t_struct(QueuedPayload)6404_storage": {
              "label": "struct LZEndpointMock.QueuedPayload",
              "members": [
                {
                  "label": "dstAddress",
                  "type": "t_address"
                },
                {
                  "label": "nonce",
                  "type": "t_uint64"
                },
                {
                  "label": "payload",
                  "type": "t_bytes_storage"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    }
  ]
}